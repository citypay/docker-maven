#!/bin/bash


. $PWD/lib.sh

version='1.0'
readonly version

this_path=$(abspath "$0")       ## Path of this file including filename
myname=$(basename "${this_path}")     ## file name of this script.

usage () {
  cat <<EOF
  usage: ${myname} [options]
  -h           optional  Print this help message
  -i IMAGE     required  The image to scan
EOF
}


# Get the flags
# If you add an option here, please
# remember to update usage() above.
while getopts h:i: args
do
  case $args in
  h) usage; exit 0 ;;
  i) image="$OPTARG" ;;
  *) usage; exit 1 ;;
  esac
done

if [ -z "$image" ]; then
  echo "No image provided"
  exit 1
else
    images=$(docker images -q $image)
    echo "using image $image, found $images"
fi


yell "# ------------------------------------------------------------------------------
# CityPay - Anti Malware Scan v$version
# ------------------------------------------------------------------------------"


echo "FROM $image" > /tmp/Dockerfile
echo 'RUN apt-get update && \' >> /tmp/Dockerfile
echo '    apt-get install -y --no-install-recommends clamav && \' >> /tmp/Dockerfile
echo '    freshclam && \' >> /tmp/Dockerfile
echo '    echo "Performing Malware scan"' >> /tmp/Dockerfile

echo 'RUN clamscan --stdout --recursive --infected \
       --exclude-dir=/proc \
       --exclude-dir=/sys \
       --exclude-dir=/usr/share/clamav-testfiles /'  >> /tmp/Dockerfile
cat /tmp/Dockerfile


# build out the image and output the report to a file
# cd /tmp
info "Building"
docker build --force-rm -t scan/$image /tmp/
build_result=$?
info "Build complete"


if [ $build_result -ne 0 ]; then
    warn "MALWARE found"
    exit $build_result
else
    pass "No MALWARE found"
fi

